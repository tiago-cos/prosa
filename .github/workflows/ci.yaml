name: Prosa CI

on:
  pull_request:
    branches: [master]
  workflow_dispatch:

jobs:
  changes:
    permissions:
      contents: read
      pull-requests: read
    name: Detect changed files
    runs-on: ubuntu-latest
    outputs:
      src_or_tests: ${{ steps.filter.outputs.src_or_tests }}
    steps:
      - uses: actions/checkout@v4

      - id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            src_or_tests:
              - 'src/**'
              - 'tests/**'
              - 'Cargo.toml'
              - 'Cargo.lock'

  build:
    name: Build Prosa
    runs-on: ubuntu-latest
    needs: changes

    if: needs.changes.outputs.src_or_tests == 'true'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2

      - name: Build server
        run: cargo build --release

      - name: Upload binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: prosa-binary
          path: target/release/prosa
          retention-days: 1

  lint:
    name: Lint Rust + TypeScript
    runs-on: ubuntu-latest
    needs: changes

    if: needs.changes.outputs.src_or_tests == 'true'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install formatting dependencies
        run: rustup component add rustfmt && rustup component add clippy

      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2

      - name: Rust format
        run: cargo fmt -- --check

      - name: Rust lint
        run: cargo clippy --all-targets --all-features -- -W clippy::pedantic -D warnings

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"
          cache-dependency-path: tests/package-lock.json

      - name: Install test deps
        working-directory: tests
        run: npm ci

      - name: Lint TS tests
        working-directory: tests
        run: npm run lint

  test:
    name: Run integration tests
    runs-on: ubuntu-latest
    needs: [build, changes]

    if: needs.changes.outputs.src_or_tests == 'true'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download server binary
        uses: actions/download-artifact@v4
        with:
          name: prosa-binary
          path: ./bin

      - name: Make binary executable
        run: chmod +x ./bin/prosa

      - name: Download kepubify
        run: |
          mkdir -p kepubify
          curl -L https://github.com/tiago-cos/kepubify/releases/latest/download/kepubify-linux-64bit \
            -o kepubify/kepubify
          chmod +x kepubify/kepubify

      - name: Run server in background
        run: |
          AUTH__ADMIN_KEY=admin_key \
          ./bin/prosa &
          SERVER_PID=$!
          echo "SERVER_PID=$SERVER_PID" >> $GITHUB_ENV

          sleep 5

          if ! kill -0 $SERVER_PID 2>/dev/null; then
            echo "Server failed to start"
            exit 1
          fi

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"
          cache-dependency-path: tests/package-lock.json

      - name: Install test deps
        working-directory: tests
        run: npm ci

      - name: Run Jest tests
        working-directory: tests
        run: npm test

      - name: Kill server
        if: always()
        run: kill $SERVER_PID || true
